{"version":3,"sources":["components/AppBar/ChangeDisplayNameButton.js","components/AppBar/LoginButton.js","components/AppBar/PageAppBar.js","components/PageContent.js","components/RoomList/RoomAddDialog.js","components/RoomList/RoomListItem.js","components/RoomList/RoomList.js","components/ChatLog/SendMessageBox.js","components/ChatLog/ChatLogMessage.js","components/ChatLog/ChatLog.js","components/UserList/UserListItem.js","components/UserList/UserList.js","components/PaperBase.js","socketEvents.js","components/EventTable.js","App.js","serviceWorker.js","index.js"],"names":["ChangeDisplayNameButton","state","dialogOpen","inputText","handleOpenDialog","bind","handleCloseDialog","handleChangeName","onTextChanged","this","setState","props","onChangeName","evt","target","value","dialogText","DialogContentText","textField","TextField","autoFocus","id","label","type","defaultValue","username","onChange","fullWidth","cancelButton","Button","onClick","color","okayButton","Typography","style","Dialog","open","onClose","aria-labelledby","DialogTitle","DialogContent","DialogActions","Component","LoginButton","inputUsername","inputPassword","handleSubmit","onUsernameChanged","onPasswordChanged","login","onLogout","axios","post","password","then","e","console","log","loginSuccess","data","token","catch","err","usernameField","passwordField","loginButton","PageAppBar","Grid","item","AppBar","position","Toolbar","variant","loggedIn","onOpenEventDialog","onDisplayNameChanged","PageContent","className","container","direction","alignItems","spacing","children","RoomAddDialog","nameInput","iconInput","edit","room","name","icon","onNameChanged","onIconChanged","onSubmit","onCancelled","statestuff","InputProps","endAdornment","InputAdornment","Icon","RoomListItem","editDialogOpen","deleteDialogOpen","onJoinClicked","openEditDialog","closeEditDialog","onSubmitEdit","openDeleteDialog","closeDeleteDialog","onDeleteItem","current","onSelected","_id","onRoomEdit","onRoomDelete","nameProps","controls","showControls","Tooltip","title","IconButton","component","editDialog","deleteDialog","ListItem","button","ListItemAvatar","Avatar","ListItemText","RoomList","newDialogOpen","onCancel","onRoomAdd","onShowRoomAdd","onRoomAdded","roomElements","rooms","map","key","currentRoom","onRoomChange","justify","wrap","align","List","SendMessageBox","text","sendMessage","handleKeyPress","handleTextChanged","trim","length","onSendMessage","event","charCode","padding","onKeyPress","Send","ChatLogMessage","user","profile","msg","sender","users","filter","fontWeight","message","ChatLog","scrollToBottom","messagesEnd","scrollIntoView","behavior","height","overflowY","messages","float","clear","ref","el","UserListItem","primary","UserList","React","PaperBase","sm","size","md","lg","Paper","elevation","justifyContent","EventTable","events","Table","TableHead","TableRow","TableCell","TableBody","scope","eventType","occurredAt","App","jwt","eventDialogOpen","onLoginSuccess","onRoomEdited","onRoomDeleted","onCloseEventDialog","socket","io","on","SocketEvents","newUsers","concat","i","emit","get","d","toString","a","Object","keys","a2","join","defaults","headers","Authorization","put","delete","newName","newMessage","roomId","CssBaseline","fullScreen","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.756f4acb.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    TextField,\n    Typography\n} from '@material-ui/core';\n\nexport class ChangeDisplayNameButton extends Component {\n    constructor() {\n        super();\n        this.state = {\n            dialogOpen: false,\n            inputText: ''\n        };\n\n        this.handleOpenDialog = this.handleOpenDialog.bind(this);\n        this.handleCloseDialog = this.handleCloseDialog.bind(this);\n        this.handleChangeName = this.handleChangeName.bind(this);\n        this.onTextChanged = this.onTextChanged.bind(this);\n    }\n\n    handleOpenDialog() { this.setState({dialogOpen: true}); }\n    handleCloseDialog() { this.setState({dialogOpen: false}); }\n\n    handleChangeName() {\n        this.handleCloseDialog();\n        this.props.onChangeName(this.state.inputText)\n    }\n    onTextChanged(evt) { this.setState({inputText: evt.target.value}); }\n\n    render() {\n        const dialogText = (\n            <DialogContentText>\n                Type in your new display name below and click 'Okay'\n            </DialogContentText>\n        );\n        const textField = <TextField\n            autoFocus\n            id=\"name\"\n            label=\"Display Name\"\n            type=\"text\"\n            defaultValue={this.props.username}\n            onChange={this.onTextChanged}\n            fullWidth\n        />\n\n        const cancelButton = (\n            <Button onClick={this.handleCloseDialog} color=\"primary\">\n                Cancel\n            </Button>\n        );\n        const okayButton = (\n            <Button onClick={this.handleChangeName} color=\"primary\">\n                Okay\n            </Button>\n        );\n\n        return (\n            <div>\n                <Button color=\"inherit\" onClick={this.handleOpenDialog}>\n                    Change Display Name&nbsp;<Typography style={{'fontWeight': 700}} >({this.props.username})</Typography>\n                </Button>\n                <Dialog \n                    open={this.state.dialogOpen}\n                    onClose={this.handleCloseDialog}\n                    aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Change Display Name</DialogTitle>\n                    <DialogContent>\n                        {dialogText}\n                        {textField}\n                    </DialogContent>\n                    <DialogActions>\n                        {cancelButton}\n                        {okayButton}\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n} ","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    TextField,\n} from '@material-ui/core';\n\nexport class LoginButton extends Component {\n    constructor() {\n        super();\n        this.state = {\n            dialogOpen: false,\n            inputUsername: 'admin',\n            inputPassword: 'admin',\n        };\n\n        this.handleOpenDialog = this.handleOpenDialog.bind(this);\n        this.handleCloseDialog = this.handleCloseDialog.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.onUsernameChanged = this.onUsernameChanged.bind(this);\n        this.onPasswordChanged = this.onPasswordChanged.bind(this);\n    }\n\n    handleOpenDialog() {\n        if (this.props.login)\n            this.setState({dialogOpen: true});\n        else\n            this.props.onLogout();\n    }\n    handleCloseDialog() {\n        this.setState({dialogOpen: false});\n    }\n    handleSubmit() {\n        this.handleCloseDialog();\n        axios.post(\n            '/api/login',\n            {\n                username: this.state.inputUsername,\n                password: this.state.inputPassword\n            }\n        ).then(e => {\n            console.log(e);\n            this.props.loginSuccess(e.data.token);\n        }).catch(err => {\n            console.log(err.data);\n            this.handleOpenDialog();\n        });\n    }\n    onUsernameChanged(evt) {\n        this.setState({inputUsername: evt.target.value});\n    }\n    onPasswordChanged(evt) {\n        this.setState({inputPassword: evt.target.value});\n    }\n\n    render() {\n        const dialogText = (\n            <DialogContentText>\n                Type in the username and password\n            </DialogContentText>\n        );\n\n        const usernameField = (\n            <TextField\n                autoFocus\n                id='username'\n                label='Username'\n                type=\"text\"\n                defaultValue={this.state.inputUsername}\n                onChange={this.onUsernameChanged}\n                fullWidth\n            />\n        );\n\n        const passwordField = (\n            <TextField\n                autoFocus\n                id='password'\n                label='Password'\n                type=\"password\"\n                defaultValue={this.state.inputPassword}\n                onChange={this.onPasswordChanged}\n                fullWidth\n            />\n        );\n\n        const cancelButton = (\n            <Button onClick={this.handleCloseDialog} color=\"primary\">\n                Cancel\n            </Button>\n        );\n        const label = this.props.login ? \"Login\" : \"Logout\";\n        const loginButton = (\n            <Button onClick={this.handleSubmit} color=\"primary\">\n                {label}\n            </Button>\n        );\n\n        return (\n            <div>\n                <Button color=\"inherit\" onClick={this.handleOpenDialog}>\n                    {label}\n                </Button>\n                <Dialog\n                    open={this.state.dialogOpen}\n                    onClose={this.handleCloseDialog}\n                    aria-labelledby=\"form-dialog-title\">\n\n                    <DialogTitle id=\"form-dialog-title\">\n                        Administrators\n                    </DialogTitle>\n                    <DialogContent>\n                        {dialogText}\n                        {usernameField}\n                        {passwordField}\n                    </DialogContent>\n                    <DialogActions>\n                        {cancelButton}\n                        {loginButton}\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\n\nimport {\n    AppBar,\n    Button,\n    Grid,\n    Toolbar,\n    Typography,\n} from '@material-ui/core';\nimport { ChangeDisplayNameButton } from './ChangeDisplayNameButton';\nimport { LoginButton } from './LoginButton';\n\nexport class PageAppBar extends Component {\n    render() {\n        return (\n            <Grid item>\n                <AppBar position=\"static\">\n                    <Toolbar>\n                        <Typography variant=\"h6\" style={{'flexGrow': '1'}}>\n                            Express Chat\n                        </Typography>\n                        {\n                            this.props.loggedIn ?\n                                <Button\n                                    onClick={this.props.onOpenEventDialog}\n                                >\n                                    Event List\n                                </Button> :\n                                null\n                        }\n                        <LoginButton\n                            login={!this.props.loggedIn}\n                            loginSuccess={this.props.loginSuccess}\n                            onLogout={this.props.onLogout}\n                        />\n                        <ChangeDisplayNameButton username={this.props.username} onChangeName={this.props.onDisplayNameChanged} />\n                    </Toolbar>\n                </AppBar>\n            </Grid>\n        );\n    }\n}","import React, { Component } from 'react';\n\nimport { Grid } from '@material-ui/core';\n\nexport class PageContent extends Component {\n\n    render() {\n        const style = {\n            'height': '100%',\n            'paddingTop': '1%',\n            'paddingLeft': '1%',\n            'paddingRight': '1%',\n        };\n\n        return (\n            <Grid item className={'PageContent'} style={{'overflowX': 'hidden', 'flexGrow': '1'}}>\n                <Grid container direction='row' alignItems=\"stretch\" style={style} spacing={3}>\n                    {this.props.children}\n                </Grid>\n            </Grid>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Icon,\n    InputAdornment,\n    TextField,\n} from '@material-ui/core';\n\nexport class RoomAddDialog extends Component {\n    constructor(props) {\n        super(props)\n        var nameInput = '';\n        var iconInput = '';\n        if (props.edit) {\n            nameInput = props.room.name;\n            iconInput = props.room.icon;\n        }\n        this.state = {\n            nameInput: nameInput,\n            iconInput: iconInput\n        };\n        this.onNameChanged = this.onNameChanged.bind(this);\n        this.onIconChanged = this.onIconChanged.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onCancelled = this.onCancelled.bind(this);\n    }\n    onNameChanged(evt) { this.setState({nameInput: evt.target.value}); }\n    onIconChanged(evt) { this.setState({iconInput: evt.target.value}); }\n    onSubmit() {\n        this.props.onSubmit({\n            name: this.state.nameInput,\n            icon: this.state.iconInput\n        });\n    }\n    onCancelled() {\n        var statestuff = null;\n        if (this.props.edit) {\n            statestuff = {\n                nameInput: this.props.room.name,\n                iconInput: this.props.room.icon\n            };\n        } else {\n            statestuff = {\n                nameInput: '',\n                iconInput: ''\n            };\n        }\n        this.setState(statestuff);\n        this.props.onCancelled();\n    }\n    render() {\n        return (\n            <Dialog\n                open={this.props.open}\n                onClose={this.onCancelled}\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <DialogTitle id=\"form-dialog-title\">\n                    {\n                        this.props.edit ?\n                            `Editing ${this.props.room.name}` :\n                            \"New Room\"\n                    }\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Make your changes and click submit\n                    </DialogContentText>\n                    <TextField\n                        autoFocus\n                        id='name'\n                        label='Name'\n                        type='text'\n                        defaultValue={this.state.nameInput}\n                        onChange={this.onNameChanged}\n                        fullWidth\n                    />\n                    <TextField\n                        id='icon'\n                        label='Icon'\n                        type='text'\n                        defaultValue={this.state.iconInput}\n                        onChange={this.onIconChanged}\n                        fullWidth\n                        InputProps={{\n                            endAdornment: (\n                                <InputAdornment position=\"end\">\n                                    <Icon>\n                                        {this.state.iconInput}\n                                    </Icon>\n                                </InputAdornment>\n                            )\n                        }}\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button fullWidth onClick={this.onSubmit} color=\"primary\">\n                        Submit\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}","import React, { Component } from 'react';\n\nimport {\n    Icon,\n    ListItem,\n    ListItemText,\n    Typography,\n    IconButton,\n    ListItemAvatar,\n    Avatar,\n    Tooltip,\n    Dialog,\n    DialogTitle,\n    DialogContentText,\n    DialogContent,\n    DialogActions,\n    Button\n} from '@material-ui/core';\nimport { RoomAddDialog } from './RoomAddDialog';\n\nexport class RoomListItem extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editDialogOpen: false,\n            deleteDialogOpen: false,\n        };\n        this.onJoinClicked = this.onJoinClicked.bind(this);\n\n        this.openEditDialog = this.openEditDialog.bind(this);\n        this.closeEditDialog = this.closeEditDialog.bind(this);\n        this.onSubmitEdit = this.onSubmitEdit.bind(this);\n\n        this.openDeleteDialog = this.openDeleteDialog.bind(this);\n        this.closeDeleteDialog = this.closeDeleteDialog.bind(this);\n        this.onDeleteItem = this.onDeleteItem.bind(this);\n    }\n\n    openEditDialog() { this.setState({editDialogOpen: true}); }\n    closeEditDialog() { this.setState({editDialogOpen: false}); }\n\n    openDeleteDialog() { this.setState({deleteDialogOpen: true}); }\n    closeDeleteDialog() { this.setState({deleteDialogOpen: false}); }\n\n    onJoinClicked() {\n        if (this.props.current) return;\n        this.props.onSelected(this.props.room._id);\n    }\n\n    onSubmitEdit(room) {\n        this.closeEditDialog();\n        console.log(this.state);\n        this.props.onRoomEdit(\n            {\n                ...this.props.room,\n                ...room\n            }\n        );\n    }\n    onDeleteItem() {\n        this.closeDeleteDialog();\n        this.props.onRoomDelete(\n            this.props.room._id\n        );\n    }\n\n    render() {\n        var nameProps = {};\n        var controls = null;\n\n        if (this.props.showControls) {\n            controls = (\n                <div>\n                    <Tooltip title=\"Join room\">\n                        <IconButton \n                                color=\"primary\"\n                                component=\"span\"\n                                onClick={this.onJoinClicked}>\n                            <Icon>arrow_forward</Icon>\n                        </IconButton>\n                    </Tooltip>\n                    <Tooltip title=\"Edit room\">\n                        <IconButton\n                            color=\"primary\"\n                            component=\"span\"\n                            onClick={this.openEditDialog}>\n                            <Icon>create</Icon>\n                        </IconButton>\n                    </Tooltip>\n                    <Tooltip title=\"Delete room\">\n                        <IconButton\n                            color=\"primary\"\n                            component=\"span\"\n                            onClick={this.openDeleteDialog}>\n                            <Icon>delete</Icon>\n                        </IconButton>\n                    </Tooltip>\n                </div>\n            );\n        }\n\n        const editDialog = (\n            <RoomAddDialog\n                edit={true}\n                open={this.state.editDialogOpen}\n                room={this.props.room}\n                onSubmit={this.onSubmitEdit}\n                onCancelled={this.closeEditDialog}\n            />\n        );\n\n        const deleteDialog = (\n            <Dialog\n                open={this.state.deleteDialogOpen}\n                onClose={this.closeDeleteDialog}\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <DialogTitle id=\"form-dialog-title\">\n                    Delete\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Are you sure you want to delete the room '{this.props.room.name}'?\n                    </DialogContentText>\n\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.onDeleteItem} color=\"secondary\">\n                        Yes\n                    </Button>\n                    <Button onClick={this.closeDeleteDialog} color=\"primary\">\n                        No\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n\n        if (this.props.current)\n            nameProps['fontWeight'] = 700;\n        return (\n            <ListItem\n                button={!this.props.showControls}\n                onClick={this.props.showControls ? null : this.onJoinClicked}\n            >\n                {editDialog}\n                {deleteDialog}\n                <ListItemAvatar>\n                    <Avatar>\n                        <Icon>{this.props.room.icon}</Icon>\n                    </Avatar>\n                </ListItemAvatar>\n                <ListItemText>\n                    <Typography style={nameProps}>\n                        {this.props.room.name}\n                    </Typography>\n                    {controls}\n                </ListItemText>\n            </ListItem>\n        );\n    }\n}","import React, { Component } from 'react';\n\nimport {\n    Grid,\n    List,\n    Typography,\n    Icon,\n    Tooltip,\n    Button\n} from '@material-ui/core';\nimport { RoomListItem } from './RoomListItem';\nimport { RoomAddDialog } from './RoomAddDialog';\n\n\nexport class RoomList extends Component {\n    constructor() {\n        super();\n        this.state = {\n            newDialogOpen: false\n        };\n\n        this.onCancel = this.onCancel.bind(this);\n        this.onRoomAdd = this.onRoomAdd.bind(this);\n        this.onShowRoomAdd = this.onShowRoomAdd.bind(this);\n    }\n    onShowRoomAdd() {\n        this.setState({\n            newDialogOpen: true\n        });\n    }\n    onCancel() {\n        this.setState({\n            newDialogOpen: false\n        });\n    }\n    onRoomAdd(room) {\n        this.onCancel();\n        this.props.onRoomAdded(room);\n    }\n    render() {\n        const roomElements = this.props.rooms.map(\n            room => (\n            <RoomListItem\n                key={room._id}\n                room={room}\n                current={this.props.currentRoom === room._id}\n                onSelected={this.props.onRoomChange}\n                showControls={this.props.loggedIn}\n                onRoomEdit={this.props.onRoomEdit}\n                onRoomDelete={this.props.onRoomDelete}\n            />\n        ));\n        return (\n            <Grid container direction=\"column\" justify=\"flex-start\" alignItems=\"stretch\" wrap=\"nowrap\">\n                <Grid item>\n                    <Typography align=\"center\" variant=\"h4\">\n                        Room List\n                        <RoomAddDialog\n                            open={this.state.newDialogOpen}\n                            edit={false}\n                            onSubmit={this.onRoomAdd}\n                            onCancelled={this.onCancel}\n                        />\n                    </Typography>\n                    {\n                        this.props.loggedIn ?\n                        <Tooltip title=\"Create room\">\n                            <Button color=\"primary\" fullWidth onClick={this.onShowRoomAdd}>\n                                <Icon>add</Icon>\n                                New Room\n                            </Button>\n                        </Tooltip> :\n                        null\n                    }\n                </Grid>\n                <Grid item className='FullHeight'>\n\n                    <List>\n                        {roomElements}\n                    </List>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n","import React, { Component } from 'react';\n\nimport { InputAdornment, IconButton, TextField } from '@material-ui/core';\nimport { Send } from '@material-ui/icons';\n\nexport class SendMessageBox extends Component {\n    constructor () {\n        super();\n        this.state = {\n            text: ''\n        };\n\n        this.sendMessage = this.sendMessage.bind(this);\n        this.handleKeyPress = this.handleKeyPress.bind(this);\n        this.handleTextChanged = this.handleTextChanged.bind(this);\n    }\n\n    sendMessage() {\n        if (this.state.text.trim().length === 0) return;\n        this.props.onSendMessage(this.state.text);\n        this.setState({text: ''});\n    }\n\n\n    handleKeyPress(event) {\n        const EnterKey = 13;\n        if (event.charCode !== EnterKey) return;\n        this.sendMessage();\n    }\n\n    handleTextChanged(event) {\n        this.setState({text: event.target.value});\n    }\n\n    render() {\n        return (\n            <div>\n                <TextField\n                    fullWidth\n                    style={{padding: 12}}\n                    type='text'\n                    onKeyPress={this.handleKeyPress}\n                    onChange={this.handleTextChanged}\n                    value={this.state.text}\n                    variant='outlined'\n                    /* https://material-ui.com/components/text-fields/#input-adornments */\n                    InputProps={{\n                        endAdornment: (\n                            <InputAdornment position=\"end\">\n                                <IconButton onClick={this.sendMessage}>\n                                    <Send />\n                                </IconButton>\n                            </InputAdornment>\n                        )\n                    }}\n                />\n            </div>\n            \n        );\n    }\n}","import React from 'react';\n\nimport { ListItem, Typography } from '@material-ui/core';\n\nexport function ChatLogMessage(props) {\n    var user = null;\n    if (props.profile.id === props.msg.sender)\n        user = props.profile;\n    else if (props.msg.sender === 0) {\n        // if sender id === 0, the message is considered a system message\n        user = {\n            username: '[System]'\n        }\n    } else\n        user = props.users.filter(e => e.id === props.msg.sender)[0];\n    console.log(props);\n    return (\n        <ListItem key={props.msg.id}>\n            <Typography style={{fontWeight: 700}}>\n                {user.username}:&nbsp;\n            </Typography>\n            <Typography>\n                {props.msg.message}\n            </Typography>\n        </ListItem>\n    );\n}","import './ChatLog.css';\nimport React, { Component } from 'react';\nimport { List } from '@material-ui/core';\nimport { SendMessageBox } from './SendMessageBox';\nimport { ChatLogMessage } from './ChatLogMessage';\n\nexport class ChatLog extends Component {\n\n    scrollToBottom = () => {\n        this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n    }\n\n    componentDidMount() {\n        this.scrollToBottom();\n    }\n\n    componentDidUpdate() {\n        this.scrollToBottom();\n    }\n    render() {\n        return (\n            <div className='ChatRoomContainer'>\n                <div className='ChatLog' style={{height: '100%', overflowY: 'auto'}}>\n                    <List style={{'height': '100%'}}>\n                        {this.props.messages.map(msg =>\n                            <ChatLogMessage key={msg.id} profile={this.props.profile} users={this.props.users} msg={msg} />\n                        )}\n                    </List>\n                    {/* https://stackoverflow.com/questions/37620694/how-to-scroll-to-bottom-in-react */}\n                    <div style={{ float:\"left\", clear: \"both\" }}\n                        ref={(el) => { this.messagesEnd = el; }}>\n                    </div>\n                </div>\n                <SendMessageBox onSendMessage={this.props.onSendMessage} />\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\n\nimport { ListItem, ListItemText } from '@material-ui/core';\n\nexport class UserListItem extends Component {\n\n    render() {\n        const { name } = this.props;\n\n        return (\n            <ListItem button>\n                <ListItemText primary={name} />\n            </ListItem>\n        );\n    }\n}","import React from 'react';\n\nimport {\n    Grid,\n    Typography,\n    List,\n} from '@material-ui/core';\n\nimport { UserListItem } from './UserListItem';\n\nexport class UserList extends React.Component {\n    render() {\n        return (\n            <Grid container direction=\"column\" justify=\"flex-start\" alignItems=\"stretch\">\n                <Grid item>\n                    <Typography align=\"center\" variant=\"h4\">\n                        User List\n                    </Typography>\n                </Grid>\n                <Grid item>\n                    <List>\n                    {this.props.users.map((user) => (\n                        <UserListItem key={user.id} name={user.username} />\n                    ))}\n                    </List>\n                </Grid>\n            </Grid>\n        )\n    }\n}\n","import React from 'react';\n\nimport { Grid, Paper } from '@material-ui/core';\n\nexport function PaperBase(props) {\n    return (\n        <Grid item sm={props.size} md={props.size} lg={props.size} className='FullHeight'>\n            <Paper elevation={3} style={{\n                height: '100%',\n                alignItems: 'center',\n                justifyContent: 'center',\n                overflowY: 'auto'\n            }}>\n                {props.children}\n            </Paper>\n        </Grid>\n    );\n}","export default {\n    Connection: 'connect',\n    Disconnect: 'disconnect',\n\n    /* Client -> Server */ GetProfileRequest: 'get_profile',\n    /* Server -> Client */ GetProfileResponse: 'get_profile_response', // username, room\n\n    /* Client -> Server */ SetDisplayName: 'set_displayname',\n    /* Server -> Client */ UserDisplayNameChanged: 'user_displayname_changed',\n\n    /* Client -> Server */ GetRoomsRequest: 'get_rooms', // get all rooms\n    /* Server -> Client */ GetRoomsResponse: 'get_rooms_response',\n\n    /* Client -> Server */ RoomChangeRequest: 'room_change',\n    /* Server -> Client */ RoomChangeResponse: 'room_change_response', // includes user list, room name, room id\n\n    /* Client -> Server */ SendMessage: 'send_message', // Send a message to your room\n    /* Server -> Client */ RoomMessage: 'room_message', // A message was sent in your room\n\n    /* Server -> Client */ UserJoinedRoom: 'user_joined', // New user joined your room\n    /* Server -> Client */ UserLeftRoom: 'user_left', // A User left your room\n};","import React from 'react';\n\nimport {\n    Table, TableCell, TableRow, TableHead, TableBody\n} from '@material-ui/core';\n\nexport function EventTable(props) {\n    console.log(props.events);\n    return (\n        <Table size='small'>\n            {/* {\n                props.events.map(e => {\n                    return (\n                        <TableRow>\n\n                        </TableRow>\n                    );\n                });\n            } */}\n            <TableHead>\n                <TableRow>\n                    <TableCell>Event Type</TableCell>\n                    <TableCell>OccuredAt</TableCell>\n                    <TableCell>Data</TableCell>\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {\n                    props.events.map((e) => {\n                        return <TableRow key={e.id}>\n                            <TableCell component=\"th\" scope=\"row\">{e.eventType}</TableCell>\n                            <TableCell>{e.occurredAt}</TableCell>\n                            <TableCell>{e.data}</TableCell>\n                         </TableRow>\n                    })\n                }\n            </TableBody>\n        </Table>\n    );\n}","import React from 'react';\nimport './App.css';\n\nimport { PageAppBar }  from './components/AppBar/PageAppBar';\nimport { PageContent } from './components/PageContent';\n\nimport { RoomList } from './components/RoomList/RoomList';\nimport { ChatLog } from './components/ChatLog/ChatLog';\nimport { UserList } from './components/UserList/UserList';\n\nimport { CssBaseline, Grid, Dialog, DialogContent, DialogTitle } from '@material-ui/core';\nimport { PaperBase } from './components/PaperBase';\n\nimport io from 'socket.io-client';\nimport SocketEvents from './socketEvents';\nimport axios from 'axios';\nimport { EventTable } from './components/EventTable';\n\nclass App extends React.Component {\n    static socket;\n    constructor() {\n        super();\n        this.state = {\n            profile: {\n                id: -1,\n                username: '',\n                room: -1,\n            },\n            rooms: [],\n            messages: [],\n            users: [],\n            events: [],\n            jwt: '',\n            eventDialogOpen: false,\n        };\n        this.onDisplayNameChanged = this.onDisplayNameChanged.bind(this);\n        this.onSendMessage = this.onSendMessage.bind(this);\n        this.onRoomChange = this.onRoomChange.bind(this);\n        this.onLoginSuccess = this.onLoginSuccess.bind(this);\n        this.onLogout = this.onLogout.bind(this);\n\n        this.onRoomAdded = this.onRoomAdded.bind(this);\n        this.onRoomEdited = this.onRoomEdited.bind(this);\n        this.onRoomDeleted = this.onRoomDeleted.bind(this);\n\n        this.onOpenEventDialog = this.onOpenEventDialog.bind(this);\n        this.onCloseEventDialog = this.onCloseEventDialog.bind(this);\n    }\n\n    componentDidMount() {\n        App.socket = io();\n        App.socket.on(SocketEvents.Connection, () => {\n            console.log('Connected')\n            App.socket.on(SocketEvents.GetProfileResponse, (profile) => {\n                console.log('Get Profile Response')\n                console.log(profile)\n                this.setState((state) => {\n                    return {\n                        ...state,\n                        profile: {\n                            id: profile.id,\n                            username: profile.username,\n                            room: profile.room\n                        },\n                    }\n                });\n            });\n            App.socket.on(SocketEvents.GetRoomsResponse, (rooms) => {\n                console.log(\"Rooms: \");\n                console.log(rooms);\n                this.setState({\n                    rooms: rooms\n                });\n            });\n            App.socket.on(SocketEvents.RoomChangeResponse, (data) => {\n                console.log(\"RoomChange: \");\n                console.log(data);\n                this.setState((state) => {\n                    return {\n                        ...state,\n                        profile: {\n                            id: state.profile.id,\n                            username: state.profile.username,\n                            room: data.room\n                        },\n                        users: data.users,\n                        messages: []\n                    };\n                });\n            });\n            App.socket.on(SocketEvents.UserDisplayNameChanged, (user) => {\n                console.log(\"DisplayNameChanged:\");\n                console.log(user);\n                this.setState((state) => {\n                    var newUsers = state.users.map((item) => {\n                        if (item.id === user.id)\n                            item.username = user.username;\n                        return item;\n                    });\n                    if (user.id === state.profile.id) {\n                        return {\n                            ...state,\n                            profile: {\n                                id: user.id,\n                                username: user.username,\n                                room: user.room\n                            },\n                            users: newUsers,\n                        }\n                    }\n                    return {\n                        ...state,\n                        users: newUsers,\n                    }\n                });\n            });\n            App.socket.on(SocketEvents.UserJoinedRoom, (user) => {\n                console.log(\"User Joined\");\n                console.log(user);\n                this.setState((state) => {\n                    return {\n                        ...state,\n                        users: state.users.concat(user)\n                    }\n                });\n            })\n            App.socket.on(SocketEvents.UserLeftRoom, (user) => {\n                console.log(\"User Left\");\n                console.log(user);\n                this.setState((state) => {\n                    return {\n                        ...state,\n                        users: state.users.filter((item, i) => {\n                            return user.id !== item.id;\n                        })\n                    };\n                });\n            })\n            App.socket.on(SocketEvents.RoomMessage, (msg) => {\n                console.log('RoomMessage');\n                console.log(msg);\n                this.setState((state) => {\n                    return {\n                        ...state,\n                        messages: [\n                            ...state.messages,\n                            msg\n                        ]\n                    }\n                });\n            })\n            App.socket.emit(SocketEvents.GetProfileRequest, {});\n            App.socket.emit(SocketEvents.GetRoomsRequest, {});\n        });\n    }\n\n    onOpenEventDialog() {\n        axios.get(\n            '/api/events'\n        ).then(e => {\n            console.log(e);\n            this.setState({\n                events: e.data.map(d => {\n                    return {\n                        id: d._id.toString(),\n                        eventType: d.eventType,\n                        data: d.data.map((a) => {\n                            return Object.keys(a).map(a2 => {\n                                return `${a2} = ${a[a2]}`;\n                            }).join(', ')\n                        }).join(', '),\n                        occurredAt: d.occurredAt\n                    };\n                }),\n                eventDialogOpen: true,\n            })\n        }).catch(e => {\n            console.log(e);\n        })\n    }\n    onCloseEventDialog() { this.setState({eventDialogOpen: false}); }\n\n    onLoginSuccess(jwt) {\n        axios.defaults.headers.Authorization = `Bearer ${jwt}`;\n        this.setState({jwt: jwt});\n    }\n    onLogout() {\n        axios.defaults.headers.Authorization = '';\n        this.setState({jwt: ''});\n    }\n\n    getAuth() {\n        return `Bearer ${this.state.jwt}`;\n    }\n\n    onRoomAdded(room) {\n        axios.post(\n            '/api/rooms',\n            room,\n        ).then(e => {\n            console.log(e);\n        }).catch(e => {\n            console.log(e);\n        })\n    }\n    onRoomEdited(room) {\n        console.log(room);\n        axios.put(\n            '/api/rooms',\n            {\n                id: room._id,\n                room: {\n                    name: room.name,\n                    icon: room.icon\n                }\n            },\n        ).then(e => {\n            console.log(e);\n        }).catch(e => {\n            console.log(e);\n        })\n    }\n    onRoomDeleted(room) {\n        axios.delete(\n            `/api/rooms/${room}`,\n            {\n                id: room,\n            },\n        ).then(e => {\n            console.log(e);\n        }).catch(e => {\n            console.log(e);\n        })\n        console.log(room);\n    }\n\n    onDisplayNameChanged(newName) {\n        App.socket.emit(SocketEvents.SetDisplayName, newName);\n    }\n\n    onSendMessage(newMessage) {\n        App.socket.emit(SocketEvents.SendMessage, newMessage);\n    }\n\n    onRoomChange(roomId) {\n        console.log('Requesting change to room: %s', roomId);\n        App.socket.emit(SocketEvents.RoomChangeRequest, roomId);\n    }\n\n    render() {\n        return (\n            <div className='App'>\n                <CssBaseline />\n                <Grid container direction=\"column\" justify=\"flex-start\" alignItems=\"stretch\" wrap=\"nowrap\" style={{'height': '100%'}}>\n                    <PageAppBar\n                        username={this.state.profile.username}\n                        onDisplayNameChanged={this.onDisplayNameChanged}\n                        loginSuccess={this.onLoginSuccess}\n                        onLogout={this.onLogout}\n                        onOpenEventDialog={this.onOpenEventDialog}\n                        onCloseEventDialog={this.onCloseEventDialog}\n                        loggedIn={this.state.jwt !== ''}\n                    />\n                    <Dialog\n                        fullScreen\n                        open={this.state.eventDialogOpen}\n                        onClose={this.onCloseEventDialog}\n                        aria-labelledby=\"form-dialog-title\"\n                    >\n                        <DialogTitle id=\"form-dialog-title\">\n                            Events\n                        </DialogTitle>\n                        <DialogContent>\n                            <EventTable\n                                events={this.state.events}\n                            />\n                        </DialogContent>\n                    </Dialog>\n                    <PageContent>\n                        {/* These items are a part of a nested <Grid container...> in PageContent */}\n                        <PaperBase size={3}>\n                            <RoomList\n                                rooms={this.state.rooms}\n                                currentRoom={this.state.profile.room}\n                                onRoomChange={this.onRoomChange}\n                                onRoomAdded={this.onRoomAdded}\n                                onRoomEdit={this.onRoomEdited}\n                                onRoomDelete={this.onRoomDeleted}\n                                loggedIn={this.state.jwt !== ''}\n                            />\n                        </PaperBase>\n                        <PaperBase size={6}>\n                            <ChatLog messages={this.state.messages} profile={this.state.profile} users={this.state.users} onSendMessage={this.onSendMessage} />\n                        </PaperBase>\n                        <PaperBase size={3}>\n                            <UserList users={this.state.users} />\n                        </PaperBase>\n                    </PageContent>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}